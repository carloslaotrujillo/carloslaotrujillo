/*
Pass by Value and Reference like the name mention is when we assign or pass as parameter either by its value or by a reference to the value. Primitives are bound to pass by value and objects are passed by reference. When we passed by value like mentioned before when make a copy of the value, so if the copied value is modified the original value is still the same. On the other hand if we pass by reference, if we modified the copied value we will also modify the original since is only a copied reference of the value on memory, a pointer if you might, like on C++. This is why we need to be careful while upating objects on React if we want save/use the previous value, in that case the recommended strategy is to make a copy of the object eithe with the map() method for arrays or the JSON.stringify() and JSON.parse() for objects, or any other pre-existing methods on the current JS landscape (ES6 spread operator, lodash, underscore, etc).
*/